name: Run all tests

# Run this workflow on push and on pull_request.
on: [push, pull_request]

jobs:
  setup:
    name: CI test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        # Health check to wait for postgres to start.
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3
    strategy:
      fail-fast: false
      matrix:
        include:
          - php: '7.2'
            moodle-branch: 'MOODLE_39_STABLE'
            database: 'pgsql'
          - php: '7.3'
            moodle-branch: 'MOODLE_39_STABLE'
            database: 'mariadb'
          - php: '7.4'
            moodle-branch: 'MOODLE_39_STABLE'
            database: 'pgsql'
          - php: '7.2'
            moodle-branch: 'MOODLE_310_STABLE'
            database: 'pgsql'
          - php: '7.3'
            moodle-branch: 'MOODLE_310_STABLE'
            database: 'mariadb'
          - php: '7.4'
            moodle-branch: 'MOODLE_310_STABLE'
            database: 'pgsql'
          - php: '7.2'
            moodle-branch: 'MOODLE_311_STABLE'
            database: 'pgsql'
          - php: '7.3'
            moodle-branch: 'MOODLE_311_STABLE'
            database: 'mariadb'
          - php: '7.4'
            moodle-branch: 'MOODLE_311_STABLE'
            database: 'pgsql'
          - php: '7.2'
            moodle-branch: 'master'
            database: 'pgsql'
          - php: '7.3'
            moodle-branch: 'master'
            database: 'mariadb'
          - php: '7.4'
            moodle-branch: 'master'
            database: 'pgsql'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          # Clone in plugin subdir, so we can setup CI in default directory.
          path: plugin

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '14.15'

      - name: Setup PHP environment
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, pgsql, mysqli
          tools: phpunit

      - name: Deploy moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          # Add dirs to $PATH
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          # PHPUnit depends on en_AU.UTF-8 locale
          sudo locale-gen en_AU.UTF-8

      - name: Install moodle-plugin-ci
        run: |
          sudo chown -R $USER /usr/local/lib/node_modules
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
          sudo chown -R root /usr/local/lib/node_modules
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: Run phplint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: Run phpcpd
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd || true

      - name: Run phpmd
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Run codechecker
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker

      - name: Run validate
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Run savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Run mustache
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: Run grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt

      # PHPdoc works but needs a *LOT* of love
      #- name: Run phpdoc
      #  if: ${{ always() }}
      #  run: moodle-plugin-ci phpdoc

      - name: Run phpunit
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit
